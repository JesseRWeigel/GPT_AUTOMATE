- DELIVERABLE: 1
  Solution:
    - Create two paddles and a ball using pygame graphics
    - Implement user-controlled movement of one of the paddles using arrow keys
    - Implement movement of other paddle as AI (computer controlled) by tracking the ball's movement and changing the paddle's position accordingly
    - Detect collision between ball and paddles and change direction of ball accordingly
  Dependencies: pygame
  SharedState: N/A
  AdditionalNotes: N/A
  RUNTIME_INSTRUCTIONS:
    FILENAME: main.py
    RELIES_ON: N/A
    IS_LIBRARY: False
    LOCATION: root
    EXECUTION_ORDER: 1
    EXECUTION_COMMAND: python main.py
    LANGUAGE: Python
    ENV_VARS: N/A
    LIBRARIES: pygame

- DELIVERABLE: 2
  Solution:
    - Implement score tracking for both players and display on screen
    - Add basic menu screen with options for starting a new game or quitting
    - Implement game over screen with option to return to main menu or restart game
  Dependencies: pygame
  SharedState: N/A
  AdditionalNotes: Uses existing code and assets from Deliverable 1
  RUNTIME_INSTRUCTIONS:
    FILENAME: menus.py
    RELIES_ON: main.py
    IS_LIBRARY: True
    LOCATION: root
    EXECUTION_ORDER: 2
    EXECUTION_COMMAND: N/A
    LANGUAGE: Python
    ENV_VARS: N/A
    LIBRARIES: pygame

- DELIVERABLE: 3
  Solution:
    - Add sound effects for ball bouncing off paddles and hitting the walls
    - Implement background music during gameplay
    - Add difficulty levels (easy, medium, hard) that affect the speed of the ball and the intelligence of the AI paddle
  Dependencies: pygame
  SharedState: N/A
  AdditionalNotes: Uses existing code and assets from Deliverable 1 and 2
  RUNTIME_INSTRUCTIONS:
    FILENAME: soundAndDifficulty.py
    RELIES_ON: menus.py
    IS_LIBRARY: True
    LOCATION: root
    EXECUTION_ORDER: 3
    EXECUTION_COMMAND: N/A
    LANGUAGE: Python
    ENV_VARS: N/A
    LIBRARIES: pygame

- DELIVERABLE: 4
  Solution:
    - Add visuals for power-ups that appear randomly during gameplay and affect the ball's speed or paddle size
    - Implement multiplayer functionality for two players on the same computer
  Dependencies: pygame
  SharedState: N/A
  AdditionalNotes: Uses existing code and assets from Deliverable 1, 2, and 3
  RUNTIME_INSTRUCTIONS:
    FILENAME: powerUpsAndMultiplayer.py
    RELIES_ON: soundAndDifficulty.py
    IS_LIBRARY: True
    LOCATION: root
    EXECUTION_ORDER: 4
    EXECUTION_COMMAND: N/A
    LANGUAGE: Python
    ENV_VARS: N/A
    LIBRARIES: pygame

